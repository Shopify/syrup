{% extends "Helpers/UnionTypeBuilder.stencil" %}{% block content %}{% include "Helpers/Header.stencil" %}
{% include "Helpers/Imports.stencil" %}

export namespace {{ name }}FragmentData {
{% call renderUnionFields "" typeName commonFields collectedFields groupedFragmentSpreads concreteTypeNames fragmentSpreads parentFragment %}
}

export type {{ name }}CommonFragmentData = {% if commonFields.count > 0 %}{
{% for field in commonFields %}
  {% with field.attributes as attributes %}{% include "Helpers/Attributes.stencil" %}{% endwith %}
  {{ field|renderPropertyDeclaration:name }};
{% endfor %}
}{% else %}{}{% endif %}{% for fragment in fragmentUnionTypes %} & {{ fragment }}CommonFragmentData{% endfor %}

export type {{ name }}UnionFragmentData = {% for fragment in fragmentUnionTypes %}{{ fragment }}UnionFragmentData | {% endfor %}{% for fragment in fragmentObjectTypes %}{{ fragment }}FragmentData | {% endfor %}{% for concreteTypeName in concreteTypeNames %}{{ name }}FragmentData.{{ concreteTypeName }} | {% endfor %}{{ name }}FragmentData.Other

export type {{ name }}FragmentData = {{ name }}CommonFragmentData & {{ name }}UnionFragmentData

export const {{ name|lowercasedFirstLetter }}Selections: GraphSelection[] = {{ selections|renderTypeScriptSelections:null,0 }}

{% endblock %}
