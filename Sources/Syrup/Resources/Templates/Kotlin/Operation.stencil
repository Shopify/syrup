{% if asFile %}
package {% if moduleName %}{{ moduleName }}{% else %}com.shopify.syrup{% endif %}.{{ operation|renderPackage }}

{{ header }}
import com.google.gson.*
import java.math.BigDecimal
import org.joda.time.DateTime
{% if importEnums %}import {% if moduleName %}{{ moduleName }}{% else %}com.shopify.syrup{% endif %}.enums.*{% endif %}
{% if importInputs %}import {% if moduleName %}{{ moduleName }}{% else %}com.shopify.syrup{% endif %}.inputs.*{% endif %}
{% if importFragments %}import {% if moduleName %}{{ moduleName }}{% else %}com.shopify.syrup{% endif %}.fragments.*{% endif %}
import {% if moduleName %}{{ moduleName }}{% else %}com.shopify.syrup{% endif %}.responses.*
import javax.annotation.Generated

@Generated("{% if moduleName %}{{ moduleName }}{% else %}com.shopify.syrup{% endif %}")
{% endif %}
class {{ operation|renderClassName }}({{ operation.variables|renderKotlinArguments }}): {{ operation|renderOperationTypeName }}<{{ operation.name }}Response> {

    override val rawQueryString = "{{ queryString|replace:"$","\$"|replaceQuotes }}"

    override fun decodeResponse(jsonObject: JsonObject): {{ operation.name }}Response {
        return {{ operation.name }}Response(jsonObject)
    }

    override val operationVariables = mapOf<String, String>(
        {{ operation.variables|renderKotlinOperationVariables }}
    )

    override val selections = {{ selections|renderKotlinSelections }}
}
